<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <properties>
        <bedrock.version>2.3.1</bedrock.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>17</java.version>

        <!-- dependency versions - get a report on updates with
              > mvn -N versions:display-property-updates
             or omit the -N to traverse the entire project hierarchy -->
        <mongodb.version>5.2.1</mongodb.version>
        <tomcat.version>10.1.33</tomcat.version>

        <junit-jupiter.version>5.11.3</junit-jupiter.version>

        <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <maven-failsafe-plugin.version>3.5.2</maven-failsafe-plugin.version>
        <maven-surefire-plugin.version>3.5.2</maven-surefire-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <maven-gpg-plugin.version>3.1.0</maven-gpg-plugin.version>
        <maven-source-plugin.version>3.3.0</maven-source-plugin.version>
        <maven-javadoc-plugin.version>3.5.0</maven-javadoc-plugin.version>
        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
        <maven-war-plugin.version>3.4.0</maven-war-plugin.version>
        <maven-install-plugin.version>3.1.3</maven-install-plugin.version>
        <maven-deploy-plugin.version>3.1.3</maven-deploy-plugin.version>
        <flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version>
        <exec-maven-plugin.version>3.1.1</exec-maven-plugin.version>
        <versions-maven-plugin.version>2.16.2</versions-maven-plugin.version>
        <build-helper-maven-plugin.version>3.6.0</build-helper-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
        <nexus-staging-maven-plugin.version>1.6.13</nexus-staging-maven-plugin.version>

        <!-- goal: eliminate these -->
        <commons-io.version>2.15.0</commons-io.version>
    </properties>

    <groupId>us.irdev.bedrock</groupId>
    <artifactId>bedrock</artifactId>
    <version>${bedrock.version}</version>
    <packaging>pom</packaging>

    <name>Bedrock</name>
    <description>A foundation for rapidly building microservices with client interactions.</description>
    <url>https://bedrock.irdev.us/</url>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/license/mit/</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Bretton Wade</name>
            <email>bretton.wade@irdev.us</email>
            <organization>Inbound Research LLC</organization>
            <organizationUrl>http://irdev.us/</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:ssh://git@github.com/InboundResearch/Bedrock.git</connection>
        <url>https://github.com/InboundResearch/Bedrock.git</url>
    </scm>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <modules>
        <module>libraries</module>
        <module>applications</module>
    </modules>

    <build>
        <plugins>
            <!-- sets the is.snapshot property to true if version is a SNAPSHOT -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>build-helper-regex-is-snapshot</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>regex-properties</goal>
                        </goals>
                        <configuration>
                            <regexPropertySettings>
                                <regexPropertySetting>
                                    <name>is.snapshot</name>
                                    <value>${bedrock.version}</value>
                                    <regex>.*-SNAPSHOT</regex>
                                    <replacement>true</replacement>
                                    <failIfNoMatch>false</failIfNoMatch>
                                </regexPropertySetting>
                            </regexPropertySettings>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- this profile-name comes from the settings.xml/profile properties -->
                                <echo level="info" message="current profile: ${profile-name}" />
                                <echo level="info" message="is.snapshot = ${is.snapshot}" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <source>${java.version}</source>
                    <release>${java.version}</release>
                    <target>${java.version}</target>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                    <compilerArgs>
                        <!--
                        <arg>-Xlint:unchecked</arg>
                        -->
                    </compilerArgs>
                    <fork>true</fork>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>${maven-install-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
                <inherited>false</inherited>
            </plugin>

            <!-- add jacoco code coverage. this happens in two parts: the first is during tests when run
                 data is collected (prepare-agent). the second is the report created during the verify
                 phase (after tests pass). for single-module projects, this is sufficient. -->
            <!-- NOTE: this has a 'code smell' because the report should be done in the reporting section
                 of the pom, but that's so poorly documented we're not surprised this is incorrect. -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <title>${project.name} ${project.version}</title>
                            <footer>Code Coverage Report for ${project.groupId}.${project.artifactId} ${project.version}</footer>
                            <includes>
                                <include>**/*.class</include>
                            </includes>
                            <outputDirectory>${project.reporting.outputDirectory}/coverage</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- for multi-module projects, an aggregating reporting module is needed, and a separate
                 aggregate report is generated from all the aggregate reporting module's dependencies. all
                  other modules can keep the default configuration above, but the reporting module should
                  get the following plugin configurations added. -->
            <!--
            <plugin>
              <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>report-aggregate</id>
                  <phase>verify</phase>
                  <goals>
                    <goal>report-aggregate</goal>
                  </goals>
                  <configuration>
                    <title>${project.artifactId} ${project.version}</title>
                    <footer>Code Coverage Report for ${project.groupId} ${project.version}</footer>
                    <includes>
                      <include>**/*.class</include>
                    </includes>
                    <outputDirectory>${project.parent.reporting.outputDirectory}/coverage</outputDirectory>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            -->

        </plugins>
    </build>
</project>
